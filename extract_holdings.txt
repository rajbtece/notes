var [head, ...list_of_holdings] = document.querySelector("#app > div:nth-child(2) > div.container.body-container.main-body-container > div > div > div > div.mf-table__container--desktop > div > ul").childNodes;

let extractRow = async (node, delay = 1000) => {
    if (node.querySelector('.dividend-type') === null) {
        node.querySelector(".fund-name").click();
    }
    console.log("Fund Name: " + node.querySelector('.fund-name').innerText + "; " + Date.now());
    return new Promise((resolve) => {
        setTimeout(() => {
            let name = "";
            let dividentType = "";
            let scheme = "";
            let subType = "";
            let invested = "";
            let units = "";
            let avgNav = "";
            let currentNav = "";
            let xirr = "";
            let profit = "";
            let profitPer = 0;
            try {
                name = node.querySelector('.fund-name').innerText;
                dividentType = node.querySelector('.dividend-type').innerText;
                scheme = node.querySelector('.scheme').innerText;
                subType = node.querySelector('.sub-scheme').innerText;

                var bodyRows = node.querySelectorAll('.main-container__detail--body > .row > div');
                invested = bodyRows[0].childNodes[1].innerText.replace(/,/g, '')
                currentValue = bodyRows[1].childNodes[1].innerText.replace(/,/g, '');
                units = bodyRows[2].childNodes[1].innerText.replace(/,/g, '');
                avgNav = bodyRows[3].childNodes[1].innerText.replace(/,/g, '');
                currentNav = bodyRows[4].childNodes[1].innerText.replace(/,/g, '');
                xirr = bodyRows[5].querySelector('.text-regular').innerText.replace(/,/g, '');
                profit = node.querySelector('.quantity-container').childNodes[1].innerText.replace(/,/g, '');
                profitPer = node.querySelector('.quantity-container').childNodes[3].innerText;
            } catch (err) {
                console.log("Error: " + err);
            }
            var data = [name, dividentType, scheme, subType, invested, currentValue, units, avgNav, currentNav, xirr, profit, profitPer];

            resolve(data.join("="));
        }, delay);
    });
}


async function processArray(holdings = []) {
    let results = [];
    for (let i = 0; i < holdings.length; i++) {
        const result = await extractRow(holdings[i]);
        results.push(result);
    }
    var _data = "\n\nFund=Type=Scheme=SubType=Invested=Current=Unit=Avg Nav=Current Nav=XIRR=Profit=Percentage\n"
        + results.sort().join("\n");
    console.log(_data);
}

processArray(list_of_holdings);
